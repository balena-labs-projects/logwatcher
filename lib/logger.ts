import * as Sentry from '@sentry/node';
import _ from 'lodash';
import { sentryConfig } from './environment';
import type { JournalEvent } from './journalEvent';

// tslint:disable-next-line: no-var-requires
const { version } = require('../package.json');
console.log(
	`Initializing sentry to: ${JSON.stringify({
		...sentryConfig,
		release: version,
	})}`,
);

Sentry.init({
	...sentryConfig,
	release: version,
	beforeBreadcrumb(breadcrumb) {
		// Ignore all breadcrumbs not generated by ourselves
		// The available breadcrumb keys are type, category, message, level, timestamp (which many SDKs will set automatically for you), and data,
		return breadcrumb.category !== 'logwatcher' ? null : breadcrumb;
	},
});

export function sendToSentry(event: Sentry.Event) {
	Sentry.captureEvent(event);
}

export function logSentryEvent(event: Sentry.Event) {
	console.debug('Sending to Sentry:', event.logger, event.level, event.message);
}

export function logEvent(event: JournalEvent) {
	const parts = [event.PRIORITY, event.MESSAGE];
	if (event.CONTAINER_NAME) {
		parts.unshift(event.CONTAINER_NAME);
	}
	console.debug('Received event:', parts.join(' '));
}
